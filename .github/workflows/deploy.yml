# If this workflow is triggered by a push to master, it
#        deploys a SNAPSHOT
# If this workflow is triggered by publishing a Release, it
#        deploys a RELEASE with the selected version
#        updates the project version by incrementing the patch version
#        commits the version update change to the repository's default branch.
name: Deploy artifacts with Maven
on:
  push:
    branches: [master]
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-24.04
    steps:
    - name: Checks out code
      uses: actions/checkout@v4

    - name: Set up Java environment
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        cache: maven
        gpg-private-key: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_SEC }}
        gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE

    - name: Run Build
      run: mvn -B -ntp clean install # com.mycila:license-maven-plugin:check # disabled for the moment

    - name: Run I-Tests and generate coverage reports
      run: mvn -B -ntp -Pitest verify failsafe:verify

    - name: Deploy SNAPSHOT / Release
      uses: camunda-community-hub/community-action-maven-release@v1.2.2
      id: release
      with:
        maven-release-options: -DskipExamples # avoid publication of examples into public repositories
        release-version: ${{ github.event.release.tag_name }}
        release-profile: community-action-maven-release
        central-release-profile: oss-maven-central
        nexus-usr: ${{ secrets.NEXUS_USR }}
        nexus-psw: ${{ secrets.NEXUS_PSW }}
        maven-usr: ${{ secrets.COMMUNITY_HUB_MAVEN_CENTRAL_OSS_USR }}
        maven-psw: ${{ secrets.COMMUNITY_HUB_MAVEN_CENTRAL_OSS_PSW }}
        maven-url: oss.sonatype.org
        maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
        maven-auto-release-after-close: true
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Attach artifacts to GitHub Release (Release only)
      if: github.event.release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
        asset_content_type: application/zip

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.1.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
